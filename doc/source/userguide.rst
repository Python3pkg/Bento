==========
User guide
==========

Package description
===================

The package description is a text file, by default named toysetup.info. Its
syntax is indentation-based, and lines starting with `#` are ignored (comments).

A typical .info file contains the following information:

    * The package metadata (name, version, etc...)
    * Optionally, it may contain addition user-customizable options such as
      path or flags, which exact value may be set at configure time.
    * A Library section, which defines the package content (packages, modules,
      C extensions, etc...)
    * Optionally, the .info file may contain one or several Executable
      sections, to describe programs expected to be run from the command line
      or from a GUI. This is where distutils scripts and setuptools console
      scripts are defined.

Each section consists of field:value pairs:

    * Field name are case-insensitive, names are case-sensitive.
    * Each indentation level must be exactly 4 spaces. Arbitrary number of
      spaces is on the TODO list, tab will not be supported.

Package metadata
----------------

Almost every metadata supported in distutils/setuptools is supported in toydist
file format. For a simple package containing one module hello, the
toysetup.info metadata definition would look like::

    Name: hello
    Version: 0.0.1
    Summary: A one-line description of the distribution
    Description:
        A longer, potentially multi-line string.

        As long as the indentation is maintained, the field is considered as
        continued.
    Author: John Doe
    AuthorEmail: john@doe.org
    License: BSD

Library section
---------------

Executable section
------------------

User-options declaration
------------------------

Pure python packages
====================

Assuming a package with the following layout::

    hello/pkg1/__init__.py
    hello/pkg1/...
    hello/pkg2/__init__.py
    hello/pkg2/...
    hello/__init__.py

it would be declared as follows::

    Name: hello
    Version: 0.0.1

    Library:
        packages:
            hello.pkg1,
            hello.pkg2,
            hello

The following syntax is also allowed::

    Library:
        packages:
            hello.pkg1, hello.pkg2, hello

as well as::

    Library:
        packages: hello.pkg1, hello.pkg2, hello

Packages containing C extensions
================================

For a simple extension hello._foo, built from sources src/foo.c and src/bar.c,
the declaration is as follows::

    Library:
        Extension: hello._foo
            sources:
                src/foo.c,
                src/bar.c

Note: none of the other distutils Extension arguments (macro definitions,
etc...) are supported yet.

Packages with data files
========================

Adding data files in toydist is easy. By data files, we mean any file other
than C extension sources and python files. There are two kinds of data files in toydist:

    * Installed data files: those are installed somewhere on the user system at
      installation time (distutils package_data and data_files, numpy.distutils
      add_data_files and add_data_dir).
    * Extra source files: those are only necessary to build the package, and
      are not installed. As such, they only need to be included in the source
      tarball (distutils MANIFEST[.in] mechanism, automatic inclusion from the
      VCS in setuptools, etc...)

Extra source files
------------------

Extra source files are simply declared in the section ExtraSourceFiles (outside
any Library section)::

    ExtraSourceFiles:
        AUTHORS,
        CHANGES,
        EXAMPLES,
        LICENSE,
        Makefile,
        README,
        TODO,
        babel.cfg

Those will be always be included in the tarball generated by toydist sdist. A
limited form of globbing is allowed::

    ExtraSourceFiles:
        doc/source/*.rst
        doc/source/chapter1/*.rst

that is globbing on every file with the same extension is allowed. Any other
form of globbing, in particular recursive ones are not supported on purpose, to
avoid cluttering the tarball by accident.

Installed data files
~~~~~~~~~~~~~~~~~~~~

TODO.

Adding custom path options
--------------------------

Conditionals
------------

Adding custom flags
-------------------

.. _sphinx: http://sphinx.pocoo.org
